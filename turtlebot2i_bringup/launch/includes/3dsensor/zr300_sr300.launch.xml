<!-- Launch file for using ZR300 and SR300 RealSense cameras at the same time -->
<launch>
  <arg name="depth_registration"  default=""/> <!--TODO: required to be included from 3dsensor.launch-->
  <arg name="camera"              default=""/> <!--TODO: required to be included from 3dsensor.launch-->
  <arg name="scan_processing"     default="true"/> <!-- Enable depthimage_to_laserscan -->
  <!-- TODO: ZR300 does not produce point cloud by default! 
       RGBD works for a while but registered pointcloud stops after a few seconds with 2 realsense sensors?
       NOTE: depth/points and rgb continue to function and so will interbotix demos.
       The driver can produce a registered pointcloud as well but with a performance hit.
       NOTE: Some topics will no longer be published/available:
       rgb/image_rect_raw image_rect_color etc.
     -->
  <arg name="zr300_registration"  default="true"/> <!-- Forces pointcloud from ZR300 driver -->

  <arg name="camera1"              default="camera" />
  <arg name="camera1_camera_type"  default="ZR300"    /> <!-- Type of camera -->
  <arg name="camera1_serial_no"    default=""        /> <!-- Note: Replace with actual serial number -->
  <arg name="camera1_usb_port_id"  default=""        /> <!-- USB "Bus#-Port#" -->
  <arg name="camera2"              default="camera_sr300" />
  <arg name="camera2_camera_type"  default="SR300"    /> <!-- Type of camera -->
  <arg name="camera2_serial_no"    default=""        /> <!-- Note: Replace with actual serial number -->
  <arg name="camera2_usb_port_id"  default=""        /> <!-- USB "Bus#-Port#" -->
  
  <arg name="manager" value="camera_nodelet_manager" /> <!-- Single nodelet manager for all cameras -->
  <node pkg="nodelet" type="nodelet" name="$(arg manager)" args="manager" output="screen"/>

  
  <group if="$(arg zr300_registration)" ns="$(arg camera1)">

    <param name="$(arg camera)/driver/color_fps"         type="int"  value="30" />
    <param name="$(arg camera)/driver/color_width"         type="int"  value="640" />
    <param name="$(arg camera)/driver/color_height"         type="int"  value="480" />

    <include file="$(find turtlebot2i_bringup)/launch/includes/3dsensor/realsense_nodelet.launch.xml">
      <arg name="manager"      value="/$(arg manager)" />
      <arg name="camera"       value="$(arg camera1)" />
      <arg name="camera_type"  value="$(arg camera1_camera_type)" />
      <arg name="serial_no"    value="$(arg camera1_serial_no)" />
      <arg name="usb_port_id"  value="$(arg camera1_usb_port_id)" />

      <arg name="force_pointcloud" value="true" />
      <arg name="rgb" value="rgb" />
    </include>
  </group> 
  

  <!-- Best know configuration for generating depth registered point cloud. -->
  <arg name="mode"            default="manual" />
  <arg name="color_width"     default="640" />
  <arg name="color_height"    default="480" />
  <arg name="depth_width"     default="640" />
  <arg name="depth_height"    default="480" />
  <arg name="depth_fps"       default="30" />
  <arg name="color_fps"       default="30" />

  <!-- Arguments for remapping all device namespaces -->
  <arg name="depth"            default="depth" />
  <arg name="rgb"              default="rgb" />
  <arg name="ir"               default="ir" />
  <arg name="depth_registered" default="depth_registered" />

  <!-- Size of message queue for synchronizing subscribed topics in depth_image_proc package.
       Increase this value for higher resolution and/or frame rates.
       If the depth_registered pointcloud topic generated by the depth_image_proc package does not contain data,
       increase this value further. -->
  <arg name="queue_size"       default="100" />
  <param name="$(arg camera1)/points_xyzrgb_sw_registered/queue_size" type="int" value="$(arg queue_size)" />
  <param name="$(arg camera2)/points_xyzrgb_sw_registered/queue_size" type="int" value="$(arg queue_size)" />

  <arg name="exact_sync"       default="true" />
  <param name="$(arg camera1)/points_xyzrgb_sw_registered/exact_sync" type="bool" value="$(arg exact_sync)" />  
  <param name="$(arg camera2)/points_xyzrgb_sw_registered/exact_sync" type="bool" value="$(arg exact_sync)" />
 
  <!-- Optionally suppress loading the driver nodelet. Useful while playing back recorded raw data from a bag.-->
  <arg name="load_driver"   default="true" />
  <arg name="publish_tf"    default="false" />

  <!-- Processing Modules -->
  <arg name="rgb_processing"                  default="true"/>
  <arg name="ir_processing"                   default="true"/>
  <arg name="depth_processing"                default="true"/>
  <arg name="depth_registered_processing"     default="true"/>
  <arg name="disparity_processing"            default="true"/>
  <arg name="disparity_registered_processing" default="true"/>
  <arg name="hw_registered_processing"        default="false" />
  <arg name="sw_registered_processing"        default="true" />

  <!-- Disable respawn topics by default -->
  <arg name="respawn" default="false" />

  <!-- Worker threads for the nodelet manager -->
  <arg name="num_worker_threads" default="4" />

  <!-- Push down all camera1 topics/nodelets into namespace -->
  <group unless="$(arg zr300_registration)" ns="$(arg camera1)">

    <!-- Load driver -->
    <include if="$(arg load_driver)"
             file="$(find realsense_camera)/launch/includes/nodelet_rgbd.launch.xml">
      <arg name="manager"                   value="/$(arg manager)" />
      <arg name="camera"                    value="$(arg camera1)" />
      <arg name="camera_type"               value="$(arg camera1_camera_type)" />
      <arg name="serial_no"                 value="$(arg camera1_serial_no)" />
      <arg name="usb_port_id"               value="$(arg camera1_usb_port_id)" />
      <arg name="depth"                     value="$(arg depth)" />
      <arg name="rgb"                       value="$(arg rgb)" />
      <arg name="ir"                        value="$(arg ir)" />
      <arg name="publish_tf"                value="$(arg publish_tf)" />
      <arg name="mode"                      value="$(arg mode)" />
      <arg name="depth_width"               value="$(arg depth_width)" />
      <arg name="depth_height"              value="$(arg depth_height)" />
      <arg name="color_width"               value="$(arg color_width)" />
      <arg name="color_height"              value="$(arg color_height)" />
      <arg name="depth_fps"                 value="$(arg depth_fps)" />
      <arg name="color_fps"                 value="$(arg color_fps)" />
    </include>

    <!-- Load standard constellation of processing nodelets -->
    <include file="$(find rgbd_launch)/launch/includes/processing.launch.xml">
      <arg name="manager"                         value="/$(arg manager)" />
      <arg name="rgb"                             value="$(arg rgb)" />
      <arg name="ir"                              value="$(arg ir)" />
      <arg name="depth"                           value="$(arg depth)" />
      <arg name="depth_registered"                value="$(arg depth_registered)" />
      <arg name="respawn"                         value="$(arg respawn)" />
      <arg name="rgb_processing"                  value="$(arg rgb_processing)" />
      <arg name="ir_processing"                   value="$(arg ir_processing)" />
      <arg name="depth_processing"                value="$(arg depth_processing)" />
      <arg name="depth_registered_processing"     value="$(arg depth_registered_processing)" />
      <arg name="disparity_processing"            value="$(arg disparity_processing)" />
      <arg name="disparity_registered_processing" value="$(arg disparity_registered_processing)" />
      <arg name="hw_registered_processing"        value="$(arg hw_registered_processing)" />
      <arg name="sw_registered_processing"        value="$(arg sw_registered_processing)" />
    </include>

  </group> <!-- camera1 -->

  <!-- Push down all camera2 topics/nodelets into namespace -->
  <group ns="$(arg camera2)">

    <!-- Load driver -->
    <include if="$(arg load_driver)"
             file="$(find realsense_camera)/launch/includes/nodelet_rgbd.launch.xml">
      <arg name="manager"                   value="/$(arg manager)" />
      <arg name="camera"                    value="$(arg camera2)" />
      <arg name="camera_type"               value="$(arg camera2_camera_type)" />
      <arg name="serial_no"                 value="$(arg camera2_serial_no)" />
      <arg name="usb_port_id"               value="$(arg camera2_usb_port_id)" />
      <arg name="depth"                     value="$(arg depth)" />
      <arg name="rgb"                       value="$(arg rgb)" />
      <arg name="ir"                        value="$(arg ir)" />
      <arg name="publish_tf"                value="$(arg publish_tf)" />
      <arg name="mode"                      value="$(arg mode)" />
      <arg name="depth_width"               value="$(arg depth_width)" />
      <arg name="depth_height"              value="$(arg depth_height)" />
      <arg name="color_width"               value="$(arg color_width)" />
      <arg name="color_height"              value="$(arg color_height)" />
      <arg name="depth_fps"                 value="$(arg depth_fps)" />
      <arg name="color_fps"                 value="$(arg color_fps)" />
    </include>

    <!-- Load standard constellation of processing nodelets -->
    <include file="$(find rgbd_launch)/launch/includes/processing.launch.xml">
      <arg name="manager"                         value="/$(arg manager)" />
      <arg name="rgb"                             value="$(arg rgb)" />
      <arg name="ir"                              value="$(arg ir)" />
      <arg name="depth"                           value="$(arg depth)" />
      <arg name="depth_registered"                value="$(arg depth_registered)" />
      <arg name="respawn"                         value="$(arg respawn)" />
      <arg name="rgb_processing"                  value="$(arg rgb_processing)" />
      <arg name="ir_processing"                   value="$(arg ir_processing)" />
      <arg name="depth_processing"                value="$(arg depth_processing)" />
      <arg name="depth_registered_processing"     value="$(arg depth_registered_processing)" />
      <arg name="disparity_processing"            value="$(arg disparity_processing)" />
      <arg name="disparity_registered_processing" value="$(arg disparity_registered_processing)" />
      <arg name="hw_registered_processing"        value="$(arg hw_registered_processing)" />
      <arg name="sw_registered_processing"        value="$(arg sw_registered_processing)" />
    </include>

  </group> <!-- camera2 -->

  <!--                        Laserscan 
     This uses lazy subscribing, so will not activate until scan is requested.
   -->
  <!-- Laserscan topic -->
  <arg name="scan_topic" default="scan"/>
  <group if="$(arg scan_processing)">
    <node pkg="nodelet" type="nodelet" name="depthimage_to_laserscan" args="load depthimage_to_laserscan/DepthImageToLaserScanNodelet camera_nodelet_manager" output="screen">
      <!-- Pixel rows to use to generate the laserscan. For each column, the scan will
           return the minimum value for those pixels centered vertically in the image. -->
      <param name="scan_height" value="10"/>
      <param name="output_frame_id" value="/camera_depth_frame"/>
      <param name="range_min" value="0.45"/>
      <remap from="image" to="/camera/$(arg depth)/image_raw"/>
      <remap from="scan" to="$(arg scan_topic)"/>

      <!-- Somehow topics here get prefixed by "$(arg camera)" when not inside an app namespace,
           so in this case "$(arg scan_topic)" must provide an absolute topic name (issue #88).
           Probably is a bug in the nodelet manager: https://github.com/ros/nodelet_core/issues/7 -->
      <remap from="camera/image" to="/camera/$(arg depth)/image_raw"/>
      <remap from="camera/scan" to="$(arg scan_topic)"/>
    </node>
  </group>
</launch>
